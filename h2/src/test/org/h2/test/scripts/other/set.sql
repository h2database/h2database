-- Copyright 2004-2020 H2 Group. Multiple-Licensed under the MPL 2.0,
-- and the EPL 1.0 (https://h2database.com/html/license.html).
-- Initial Developer: H2 Group
--

@reconnect off

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
>> READ COMMITTED

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
>> READ UNCOMMITTED

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
>> READ COMMITTED

SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
#+mvStore#>> REPEATABLE READ
#-mvStore#>> SERIALIZABLE

SET TRANSACTION ISOLATION LEVEL SNAPSHOT;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
#+mvStore#>> SNAPSHOT
#-mvStore#>> SERIALIZABLE

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
>> SERIALIZABLE

SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
>> READ UNCOMMITTED

SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL READ COMMITTED;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
>> READ COMMITTED

SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL REPEATABLE READ;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
#+mvStore#>> REPEATABLE READ
#-mvStore#>> SERIALIZABLE

SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL SNAPSHOT;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
#+mvStore#>> SNAPSHOT
#-mvStore#>> SERIALIZABLE

SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL SERIALIZABLE;
> ok

SELECT ISOLATION_LEVEL FROM INFORMATION_SCHEMA.SESSIONS WHERE ID = SESSION_ID();
>> SERIALIZABLE

SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL READ COMMITTED;
> ok

SELECT "VALUE" FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'VARIABLE_BINARY';
>> FALSE

CREATE MEMORY TABLE TEST(B BINARY);
> ok

SCRIPT NODATA NOPASSWORDS NOSETTINGS TABLE TEST;
> SCRIPT
> --------------------------------------------------
> -- 0 +/- SELECT COUNT(*) FROM PUBLIC.TEST;
> CREATE MEMORY TABLE "PUBLIC"."TEST"( "B" BINARY );
> CREATE USER IF NOT EXISTS "SA" PASSWORD '' ADMIN;
> rows: 3

DROP TABLE TEST;
> ok

SET VARIABLE_BINARY TRUE;
> ok

SELECT "VALUE" FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME = 'VARIABLE_BINARY';
>> TRUE

CREATE MEMORY TABLE TEST(B BINARY);
> ok

SCRIPT NODATA NOPASSWORDS NOSETTINGS TABLE TEST;
> SCRIPT
> -----------------------------------------------------
> -- 0 +/- SELECT COUNT(*) FROM PUBLIC.TEST;
> CREATE MEMORY TABLE "PUBLIC"."TEST"( "B" VARBINARY );
> CREATE USER IF NOT EXISTS "SA" PASSWORD '' ADMIN;
> rows: 3

DROP TABLE TEST;
> ok

SET VARIABLE_BINARY FALSE;
> ok

SET LOCK_MODE 0;
> ok

CALL LOCK_MODE();
>> 0

SET LOCK_MODE 1;
> ok

CALL LOCK_MODE();
#+mvStore#>> 3
#-mvStore#>> 1

SET LOCK_MODE 2;
> ok

CALL LOCK_MODE();
#+mvStore#>> 3
#-mvStore#>> 2

SET LOCK_MODE 3;
> ok

CALL LOCK_MODE();
>> 3

@reconnect on

SELECT CURRENT_PATH;
> CURRENT_PATH
> ------------
>
> rows: 1

SET SCHEMA_SEARCH_PATH PUBLIC, INFORMATION_SCHEMA;
> ok

SELECT CURRENT_PATH;
>> "PUBLIC","INFORMATION_SCHEMA"

SET SCHEMA_SEARCH_PATH PUBLIC;
> ok
